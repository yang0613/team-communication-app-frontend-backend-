#
# CSE183 Assignment 8 Backend
#

openapi: '3.0.3'

info:
  description: CSE183 Assignment 8 Backend
  version: 0.1.0
  title: CSE183 Assignment 8 Backend

servers:
  - url: http://localhost:3010/v0

paths:
  /dummy:
    get:
      description: Dummy Endpoint
      responses:
        200:
          description: Succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /workspace:
    get:
      description: Returns the users workspaces
      responses:
        401:
          description: Unauthorised
        200:
          description: Workspace response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspaces'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    # post:
    #   description: Create new workspace
    #   requestBody:
    #     description: workspace to add
    #     required: true
    #     content:
    #       application/json:
    #         schema:
    #           $ref: '#/components/schemas/Workspace'
    #   responses:
    #     401:
    #       description: Unauthorised
    #     201:
    #       description: Workspace Create
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/Workspace'
    #     400:
    #       description: Unexpected properties
    #     default:
    #       description: unexpected error
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/Error'
    # delete:
    #   description: Delete a workspace
    #   parameters:
    #   - name: workspace
    #     in: query
    #     description: name of workspace
    #     required: true
    #     schema:
    #       type: string
    #   responses:
    #     401:
    #       description: Unauthorised
    #     204:
    #       description: Workspace Deleted
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/Workspaces'
    #     404:
    #       description: workspace not found
    #     default:
    #       description: unexpected error
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/Error'

  /channel/{workspace}:
    get:
      description: Returns the users workspaces
      parameters:
      - name: workspace
        in: path
        description: ID of the Workspace
        required: true
        schema:
          type: string
          format: uuid
      responses:
        401:
          description: Unauthorised
        200:
          description: Channel response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channels'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /message/{channel}:
    get:
      description: Returns the users channel messages
      parameters:
      - name: channel
        in: path
        description: ID of the channel
        required: true
        schema:
          type: string
          format: uuid
      responses:
        401:
          description: Unauthorised
        200:
          description: Channel message response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Messages'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Create new message
      requestBody:
        description: Message to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        401:
          description: Unauthorised
        201:
          description: Message Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        400:
          description: Unexpected properties
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /dm/{user}:
    get:
      description: Returns the users direct messages
      parameters:
      - name: user
        in: path
        description: ID of the user
        required: true
        schema:
          type: string
          format: uuid
      responses:
        401:
          description: Unauthorised
        200:
          description: Direct message response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectMessages'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Create new direct message
      requestBody:
        description: Direct message to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectMessage'
      responses:
        401:
          description: Unauthorised
        201:
          description: Direct Message Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectMessage'
        400:
          description: Unexpected properties
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    DummyResponse:
      required:
        - message
      properties:
        message:
          type: string

    Workspaces:
      type: array
      items:
        $ref: '#/components/schemas/Workspace'

    Workspace:
      type: object
      properties:
        name:
          type: string
        id:
          type: string

    Channels:
      type: array
      items:
        $ref: '#/components/schemas/Channel'

    Channel:
      type: object
      properties:
        name:
          type: string
        id:
          type: string

    Messages:
      type: array
      items:
        $ref: '#/components/schemas/Message'

    Message:
      type: object
      properties:
        name:
          type: string
        text:
          type: string
        time:
          type: string
          format: date
        message_id:
          type: string
          format: uuid

    DirectMessages:
      type: array
      items:
        $ref: '#/components/schemas/DirectMessage'

    DirectMessage:
      type: object
      properties:
        name:
          type: string
        userID:
          type: string
          format: uuid
        status:
          type: string
        time:
          type: string
          format: date
        directmessage_id:
          type: string
          format: uuid
        message:
          type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []
